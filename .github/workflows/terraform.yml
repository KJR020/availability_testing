name: Terraform CI/CD with AQUA

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  TF_VERSION: "1.8.4"
  AWS_REGION: "ap-northeast-1"

jobs:
  terraform:
    name: Terraform Plan and Apply
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup AQUA
      uses: aquaproj/aqua-installer@v3
      with:
        aqua_version: v2.25.1

    - name: Install tools with AQUA
      run: aqua install

    - name: Terraform Format Check
      run: terraform fmt -check

    - name: Terraform Init
      run: terraform init
      env:
        TF_CLI_ARGS_init: "-backend-config=\"bucket=${{ secrets.TF_STATE_BUCKET }}\" -backend-config=\"key=${{ secrets.TF_STATE_KEY }}\" -backend-config=\"region=${{ env.AWS_REGION }}\""

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Lint (TFLint)
      run: tflint --init && tflint

    - name: Terraform Security (TFSec)
      run: tfsec .

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -out=tfplan
      continue-on-error: true

    - name: Comment PR with Plan
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      env:
        PLAN: "${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Plan ðŸ“–
          <details><summary>Show Plan</summary>

          \`\`\`terraform
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve tfplan

    - name: Generate Terraform Docs
      if: github.event_name == 'pull_request'
      run: terraform-docs markdown table --output-file terraform-docs.md .

    - name: Upload Terraform Docs
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: terraform-docs
        path: terraform-docs.md